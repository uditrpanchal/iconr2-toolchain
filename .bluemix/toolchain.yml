version: 2
template:
  name: ICON r2 Development Toolchain Template
  description: This Toolchain is for Developing ICON r2. 
  info:
    git url: '[https://github.com/uditrpanchal/iconr2-toolchain](https://github.com/uditrpancha/iconr2-toolchain)'
    git branch: '[test-all](https://github.com/uditrpanchal/iconr2-toolchain/tree/test-all)'
toolchain:
  name: icon2-toolchain-{{timestamp}}
services:
  icon-r2-init-setup-repo:
    service_id: githubpublic
    parameters:
      repo_url: 'https://github.com/MOHLTC11/icon-r2-init-setup.git'
      type: link
      has_issues: false
      enable_traceability: false
  icon-r2-init-setup-pipeline:
    service_id: pipeline
    parameters:
      services:
        - icon-r2-init-setup-repo
      name: 'icon-r2-init-setup-pipeline'
      configuration:
        content:
          $ref: init-setup.yml
          $refType: text
        env:
          SAMPLE_REPO: icon-r2-init-setup-repo
          CF_APP_NAME1: '{{form.pipeline.parameters.init-setup-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
    execute: false
  icon-r2-clamav-repo:
    service_id: githubpublic
    parameters:
      repo_name: '{{toolchain.name}}'
      repo_url: 'https://github.com/MOHLTC11/icon-r2-clamav.git'
      type: link
      has_issues: false
      enable_traceability: false
  icon-r2-clamav-pipeline:
    service_id: pipeline
    parameters:
      services:
        - icon-r2-clamav-repo
      name: 'icon-r2-clamav-pipeline'
      configuration:
        content:
          $ref: clamav-pipeline.yml
          $refType: text
        env:
          SAMPLE_REPO: icon-r2-clamav-repo
          CF_APP_NAME: '{{form.pipeline.parameters.clamav-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          ICON_DOMAIN: '{{form.pipeline.parameters.icon-domain}}'
          CLAMAV_MEM: '{{form.pipeline.parameters.icon_clamav_mem}}'
          CLAMAV_COUNT: '{{form.pipeline.parameters.icon_clamav_count}}'
          BLUE_GREEN: '{{form.pipeline.scripts.blue-green}}'
      execute: false
  icon-r2-frontend-nginx-repo:
    service_id: githubpublic
    parameters:
      repo_url: 'https://github.com/MOHLTC11/icon-r2-frontend-nginx.git'
      type: link
      has_issues: false
      enable_traceability: false
  icon-r2-frontend-nginx-pipeline:
    service_id: pipeline
    parameters:
      services:
        - icon-r2-frontend-nginx-repo
      name: 'icon-r2-frontend-nginx-pipeline'
      configuration:
        content:
          $ref: frontend-nginx-pipeline.yml
          $refType: text
        env:
          SAMPLE_REPO: icon-r2-frontend-nginx-repo
          CF_APP_NAME: '{{form.pipeline.parameters.frontend-nginx-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          ICON_DOMAIN: '{{form.pipeline.parameters.icon-domain}}'
          ICON_SERVER_NAME: '{{form.pipeline.parameters.server-app-name}}'
          PHU_SELECT: '{{form.pipeline.parameters.PHUs}}'
          CUSTOM_PHU: '{{form.pipeline.parameters.customPHUs}}'
          FRONT_END_DOMAIN: '{{form.pipeline.parameters.front_end_domain}} '
          PHUs: '{{form.pipeline.parameters.PHUs}}'
          FRONTEND_MEM: '{{form.pipeline.parameters.frontend_mem}}'
          FRONTEND_COUNT: '{{form.pipeline.parameters.frontend_count}}'
          BLUE_GREEN: '{{form.pipeline.scripts.blue-green}}'
          VERSION: '{{form.pipeline.parameters.app_version}}'
      execute: false
  icon-r2-dhir-nginx-repo:
    service_id: githubpublic
    parameters:
      repo_url: 'https://github.com/MOHLTC11/icon-r2-dhir-nginx.git'
      type: link
      has_issues: false
      enable_traceability: false
  icon-r2-dhir-nginx-pipeline:
    service_id: pipeline
    parameters:
      services:
        - icon-r2-dhir-nginx-repo
      name: 'icon-r2-dhir-nginx-pipeline'
      configuration:
        content:
          $ref: dhir-nginx-pipeline.yml
          $refType: text
        env:
          SAMPLE_REPO: icon-r2-dhir-nginx-repo
          CF_APP_NAME: '{{form.pipeline.parameters.dhir-nginx-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          ICON_DOMAIN: '{{form.pipeline.parameters.icon-domain}}'
          DHIR_NGINX_MEM: '{{form.pipeline.parameters.dhir_nginx_mem}}'
          DHIR_NGINX_COUNT: '{{form.pipeline.parameters.dhir_nginx_count}}'
          BLUE_GREEN: '{{form.pipeline.scripts.blue-green}}'
          BACKEND_ENV: '{{form.pipeline.parameters.backend_env}}'
      execute: false
  icon-r2-kibana-repo:
    service_id: githubpublic
    parameters:
      repo_url: 'https://github.com/MOHLTC11/icon-r2-kibana.git'
      type: link
      has_issues: false
      enable_traceability: false
  icon-r2-kibana-pipeline:
    service_id: pipeline
    parameters:
      services:
        - icon-r2-kibana-repo
      name: 'icon-r2-kibana-pipeline'
      configuration:
        content:
          $ref: kibana-pipeline.yml
          $refType: text
        env:
          SAMPLE_REPO: icon-r2-kibana-repo
          CF_APP_NAME: '{{form.pipeline.parameters.kibana-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          ICON_DOMAIN: '{{form.pipeline.parameters.icon-domain}}'
          GET_CERT: '{{form.pipeline.scripts.get-cert}}'
          KIBANA_MEM: '{{form.pipeline.parameters.icon_kibana_mem}}'
          KIBANA_COUNT: '{{form.pipeline.parameters.icon_kibana_count}}'
          BLUE_GREEN: '{{form.pipeline.scripts.blue-green}}'
      execute: false
  icon-r2-server-repo:
    service_id: githubpublic
    parameters:
      repo_url: 'https://github.com/MOHLTC11/icon-r2-backend.git'
      type: link
      has_issues: false
      enable_traceability: false
  icon-r2-server-pipeline:
    service_id: pipeline
    parameters:
      services:
        - icon-r2-server-repo
      name: 'icon-r2-backend-pipeline'
      configuration:
        content:
          $ref: icon-backend-pipeline.yml
          $refType: text
        env:
          SAMPLE_REPO: icon-r2-server-repo
          CF_APP_NAME1: '{{form.pipeline.parameters.server-app-name}}'
          CF_APP_NAME2: '{{form.pipeline.parameters.server-worker-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          ICON_DOMAIN: '{{form.pipeline.parameters.icon-domain}}'
          CLAMAV_NAME: '{{form.pipeline.parameters.clamav-app-name}}'
          DHIR_NAME: '{{form.pipeline.parameters.dhir-nginx-app-name}}'
          CRYPTO_PASSWORD: '{{form.pipeline.parameters.crypto-password}}'
          JWT_TOKEN_SECRET_KEY: '{{form.pipeline.parameters.jwt-secret}}'
          PHIX_ENDPOINT_DICTIONARY: '{{form.pipeline.parameters.endpoint_dictionary}}'
          PHIX_ENDPOINT_RETRIEVAL: '{{form.pipeline.parameters.endpoint_retrieval}}'
          PHIX_ENDPOINT_RETRIEVAL_TOKEN: '{{form.pipeline.parameters.endpoint_retrieval_token}}'
          PHIX_ENDPOINT_SUBMISSION: '{{form.pipeline.parameters.endpoint_submission}}'
          PHIX_ENDPOINT_SUBMISSION_TOKEN: '{{form.pipeline.parameters.endpoint_submission_token}}'
          PHIX_ENDPOINT_PIN_ADMIN: '{{form.pipeline.parameters.endpoint_pin_admin}}'
          PHIX_ENDPOINT_PIN_ADMIN_TOKEN: '{{form.pipeline.parameters.endpoint_pin_admin_token}}'
          POSTGRES_READONLY_ROLE: '{{form.pipeline.parameters.postgres_readonly_role}}'
          TZ: '{{form.pipeline.parameters.tz}}'
          GET_CERT: '{{form.pipeline.scripts.get-cert}}'
          BACKEND_MEM: '{{form.pipeline.parameters.backend_mem}}'
          BACKEND_COUNT: '{{form.pipeline.parameters.backend_count}}'
          BACKEND_WORKER_MEM: '{{form.pipeline.parameters.backend_worker_mem}}'
          BACKEND_WORKER_COUNT: '{{form.pipeline.parameters.backend_worker_count}}'
          BLUE_GREEN: '{{form.pipeline.scripts.blue-green}}'
          VERSION: '{{form.pipeline.parameters.app_version}}'
    execute: false
  icon-deploy-pipeline:
    service_id: pipeline
    parameters:
      services:
        - icon-r2-server-repo
        - icon-r2-kibana-repo
        - icon-r2-frontend-nginx-repo
        - icon-r2-clamav-repo
        - icon-r2-dhir-nginx-repo
        - icon-r2-init-setup-repo
      name: 'icon-deploy-pipeline'
      configuration:
        content:
          $ref: bg-deploy-pipeline.yml
          $refType: text
        env:
          INIT_REPO: icon-r2-init-setup-repo
          SERVER_REPO: icon-r2-server-repo
          CLAMAV_REPO: icon-r2-clamav-repo
          DHIR_NGINX_REPO: icon-r2-dhir-nginx-repo
          FRONTEND_REPO: icon-r2-frontend-nginx-repo
          ICON_KIBANA_REPO: icon-r2-kibana-repo
          SERVER_NAME: '{{form.pipeline.parameters.server-app-name}}'
          WORKER_NAME: '{{form.pipeline.parameters.server-worker-app-name}}'
          KIBANA_NAME: '{{form.pipeline.parameters.kibana-app-name}}'
          DHIR_NGINX_NAME: '{{form.pipeline.parameters.dhir-nginx-app-name}}'
          FRONTEND_NAME: '{{form.pipeline.parameters.frontend-nginx-app-name}}'
          CLAMAV_NAME: '{{form.pipeline.parameters.clamav-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          ICON_DOMAIN: '{{form.pipeline.parameters.icon-domain}}'
          DHIR_NAME: '{{form.pipeline.parameters.dhir-nginx-app-name}}'
          CRYPTO_PASSWORD: '{{form.pipeline.parameters.crypto-password}}'
          JWT_TOKEN_SECRET_KEY: '{{form.pipeline.parameters.jwt-secret}}'
          PHIX_ENDPOINT_DICTIONARY: '{{form.pipeline.parameters.endpoint_dictionary}}'
          PHIX_ENDPOINT_RETRIEVAL: '{{form.pipeline.parameters.endpoint_retrieval}}'
          PHIX_ENDPOINT_RETRIEVAL_TOKEN: '{{form.pipeline.parameters.endpoint_retrieval_token}}'
          PHIX_ENDPOINT_SUBMISSION: '{{form.pipeline.parameters.endpoint_submission}}'
          PHIX_ENDPOINT_SUBMISSION_TOKEN: '{{form.pipeline.parameters.endpoint_submission_token}}'
          PHIX_ENDPOINT_PIN_ADMIN: '{{form.pipeline.parameters.endpoint_pin_admin}}'
          PHIX_ENDPOINT_PIN_ADMIN_TOKEN: '{{form.pipeline.parameters.endpoint_pin_admin_token}}'
          POSTGRES_READONLY_ROLE: '{{form.pipeline.parameters.postgres_readonly_role}}'
          TZ: '{{form.pipeline.parameters.tz}}'
          BACKEND_MEM: '{{form.pipeline.parameters.backend_mem}}'
          BACKEND_COUNT: '{{form.pipeline.parameters.backend_count}}'
          BACKEND_WORKER_MEM: '{{form.pipeline.parameters.backend_worker_mem}}'
          BACKEND_WORKER_COUNT: '{{form.pipeline.parameters.backend_worker_count}}'
          KIBANA_MEM: '{{form.pipeline.parameters.icon_kibana_mem}}'
          KIBANA_COUNT: '{{form.pipeline.parameters.icon_kibana_count}}'
          DHIR_NGINX_MEM: '{{form.pipeline.parameters.dhir_nginx_mem}}'
          DHIR_NGINX_COUNT: '{{form.pipeline.parameters.dhir_nginx_count}}'
          FRONTEND_MEM: '{{form.pipeline.parameters.frontend_mem}}'
          FRONTEND_COUNT: '{{form.pipeline.parameters.frontend_count}}'
          CLAMAV_MEM: '{{form.pipeline.parameters.icon_clamav_mem}}'
          CLAMAV_COUNT: '{{form.pipeline.parameters.icon_clamav_count}}'
          BACKEND_ENV: '{{form.pipeline.parameters.backend_env}}'
          PHU_SELECT: '{{form.pipeline.parameters.PHUs}}'
          CUSTOM_PHU: '{{form.pipeline.parameters.customPHUs}}'
          FRONT_END_DOMAIN: '{{form.pipeline.parameters.front_end_domain}} '
          GET_CERT: '{{form.pipeline.scripts.get-cert}}'
          ROLL_BACK: '{{form.pipeline.scripts.roll_back}}'
          VERSION: '{{form.pipeline.parameters.app_version}}'
      execute: false
form:
  pipeline:
    scripts:
      get-cert: |-
        #!/bin/bash
        getcert(){
          set +e
          cert=\$(cf service-key icon-elasticsearch Credential1 | grep ca_certificate_base64 | cut -d ':' -f 2 | tr -d "\\", \\n"  | base64 --decode)
          if [ ! -z "\$cert" ]
          then
            echo \$cert > cert.pem
          fi
          set -e 
        }
      roll_back: |-
        #!/bin/bash
        echo "Blue Green Deployment"
        cleanup() {
          set +e  
          echo "Deployment failed, deleting all deployed components"
          cf delete -f \${DHIR_NAME}-new
          cf delete -f \${SERVER_NAME}-new
          cf delete -f \${WORKER_NAME}-new
          cf delete -f \${CLAMAV_NAME}-new
          cf delete -f \${FRONTEND_NAME}-new 
          cf dsk -f  icon-postgresql-\${JOB_NAME:0:3} Credential1
          cf dsk -f  icon-rabbitmq-\${JOB_NAME:0:3} Credential1
          cf ds -f icon-postgresql-\${JOB_NAME:0:3}
          cf ds -f icon-rabbitmq-\${JOB_NAME:0:3}
          exit 1
        }
        set -eE
        trap cleanup ERR
        deploy
      blue-green: |-
        #!/bin/bash
        echo "Blue Green Deployment"
        if ! cf app \$CF_APP; then  
          deploy
        else
          OLD_CF_APP=\${CF_APP}-OLD
          rollback() {
            set +e  
            if cf app \$OLD_CF_APP; then
              cf logs \$CF_APP --recent
              cf delete \$CF_APP -f
              cf rename \$OLD_CF_APP \$CF_APP
            fi
            exit 1
          }
          set -e
          trap rollback ERR
          cf rename \$CF_APP \$OLD_CF_APP
          deploy
          cf stop \$OLD_CF_APP
        fi
    parameters:
      server-app-name: '{{form.pipeline.parameters.prod-space}}-icon-server'
      server-worker-app-name: '{{form.pipeline.parameters.prod-space}}-icon-server-worker'
      frontend-nginx-app-name: '{{form.pipeline.parameters.prod-space}}-icon-nginx'
      dhir-nginx-app-name: '{{form.pipeline.parameters.prod-space}}-dhir-nginx'
      kibana-app-name: '{{form.pipeline.parameters.prod-space}}-icon-kibana'
      clamav-app-name: '{{form.pipeline.parameters.prod-space}}-icon-clamav'
      icon-domain: 'ehealthontario.ca-east.mybluemix.net'
      crypto-password: '0831091F47114659B3901BD590B85C7C4976A6BEF194549639B2A284B754C6E4EGEFDD432DRGCD'
      jwt-secret: '0831091F47114659B3901BD590B85C7C4976A6BEF194549639B2A284B754C6E4'
      endpoint_dictionary: '/API/FHIR/Immunizations/v2/Dictionary?domain='
      endpoint_retrieval: '/API/FHIR/Immunizations/v2/Immunization'
      endpoint_retrieval_token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE0OTcxMTE1OTAsInN1YiI6ImFzZGZzZGFmIiwiaXNzIjoiYXNkZmFzZGYiLCJhdWQiOiJhc2RmYXNkZiIsImp0aSI6ImFzZGZhc2RmIiwiaWF0IjoxNDY1NTc1NTkwfQ'
      endpoint_submission: '/API/FHIR/Immunizations/v2/Communication'
      endpoint_submission_token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE0OTcxMTE1OTAsInN1YiI6ImFzZGZzZGFmIiwiaXNzIjoiYXNkZmFzZGYiLCJhdWQiOiJhc2RmYXNkZiIsImp0aSI6ImFzZGZhc2RmIiwiaWF0IjoxNDY1NTc1NTkwfQ'
      endpoint_pin_admin: '/API/FHIR/Immunizations/v2/Admin/'
      endpoint_pin_admin_token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE0OTcxMTE1OTAsInN1YiI6ImFzZGZzZGFmIiwiaXNzIjoiYXNkZmFzZGYiLCJhdWQiOiJhc2RmYXNkZiIsImp0aSI6ImFzZGZhc2RmIiwiaWF0IjoxNDY1NTc1NTkwfQ'
      postgres_readonly_role: 'readonly:WERJFIRWJWNEDJASDF'
      front_end_domain: ''
      tz: 'America/Toronto'
      PHUs: 'Full'
      customPHUs: ''
      frontend_mem: '256MB'
      frontend_count: '1'
      backend_mem: '1024MB'
      backend_count: '1'
      backend_worker_mem: '1024MB'
      backend_worker_count: '1'
      icon_clamav_mem: '1024MB'
      icon_clamav_count: '1'
      dhir_nginx_mem: '256MB'
      dhir_nginx_count: '1'
      icon_kibana_mem: '1024MB'
      icon_kibana_count: '1'
      init-setup-app-name: 'icon-r2-init-setup'
      backend_env: 'UAT'
      app_version: 'master'
    schema:
      $ref: deploy.json
